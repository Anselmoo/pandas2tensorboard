[tool.poetry]
name = "Pandas2TensorBoard"
version = "0.1.1-alpha.1"
description = "Pandas DataFrames converted to TensorBoard Format"
readme = "README.md"
authors = ["Anselm Hahn <Anselm.Hahn@gmail.com>"]
maintainers = ["Anselm Hahn <Anselm.Hahn@gmail.com>"]
license = "MIT"
repository = "https://github.com/Anselmoo/pandas2tensorboard/"
documentation = "https://github.com/Anselmoo/pandas2tensorboard/"
homepage = "https://pypi.org/project/pandas2tensorboard/"
keywords = ["tensorboard", "pandas", "machine learning", "visualizer"]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS",
  "Operating System :: Unix",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Database",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering :: Visualization",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
exclude = ["example"]

[tool.poetry.dependencies]
python = ">=3.8,<3.10"
pandas = "^1.4.0"
modin = { version = "^0.13.0", optional = true }
torch = "^1.10.2"
tensorboard = "^2.8.0"
dask = { version = "^2022.1.1", optional = true }
intake-omnisci = { version = "^0.1.0", optional = true }


[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-clarity = "^1.0.1"
pytest-xdist = "^2.5.0"
black = { version = "^22.1.0", allow-prereleases = true }
seaborn = "^0.11.2"
isort = "^5.10.1"
flake8 = "^4.0.1"
blacken-docs = "^1.12.1"
mypy = "^0.931"
pydocstyle = "^6.1.1"

[tool.poetry.extras]
modin = ["modin"]
backend = ["dask", "intake-omnisci"]
all = ["modin", "dask", "intake-omnisci"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
src_paths = ["poetry", "tests"]
skip_glob = ["*/setup.py"]
filter_files = true
known_first_party = "poetry"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | test
  | tests/.*/setup.py
)/
'''

[tool.flake8]
max-doc-length = 100
max-line-length = 88
docstring-convention = "google"
ignore = ["E203", "W503", "W605"]

[tool.pytest]
script_launch_mode = "subprocess"

[tool.pydocstyle]
match = '.*\.py'

[tools.mypy]
plugins = "numpy.typing.mypy_plugin"
